{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Yarp": "Information"
    }
  },
  "AllowedHosts": "*",
  "Jwt": {
    "Issuer": "https://omarino-ems.local",
    "Audience": "omarino-ems-api",
    "SecretKey": "CHANGE_THIS_TO_A_SECURE_SECRET_KEY_AT_LEAST_32_CHARACTERS_LONG",
    "ExpirationMinutes": 60
  },
  "ReverseProxy": {
    "Routes": {
      "meters-route": {
        "ClusterId": "timeseries-cluster",
        "Match": {
          "Path": "/api/meters/{**catch-all}"
        }
      },
      "series-route": {
        "ClusterId": "timeseries-cluster",
        "Match": {
          "Path": "/api/series/{**catch-all}"
        }
      },
      "ingest-route": {
        "ClusterId": "timeseries-cluster",
        "Match": {
          "Path": "/api/ingest/{**catch-all}"
        }
      },
      "timeseries-route": {
        "ClusterId": "timeseries-cluster",
        "Match": {
          "Path": "/api/timeseries/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      "forecast-route": {
        "ClusterId": "forecast-cluster",
        "Match": {
          "Path": "/api/forecast/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      "optimize-route": {
        "ClusterId": "optimize-cluster",
        "Match": {
          "Path": "/api/optimize/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      "scheduler-route": {
        "ClusterId": "scheduler-cluster",
        "Match": {
          "Path": "/api/scheduler/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      }
    },
    "Clusters": {
      "timeseries-cluster": {
        "Destinations": {
          "timeseries-destination": {
            "Address": "http://timeseries-service:5001"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:10",
            "Policy": "ConsecutiveFailures",
            "Path": "/api/health"
          }
        }
      },
      "forecast-cluster": {
        "Destinations": {
          "forecast-destination": {
            "Address": "http://forecast-service:8001"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:10",
            "Policy": "ConsecutiveFailures",
            "Path": "/api/health"
          }
        }
      },
      "optimize-cluster": {
        "Destinations": {
          "optimize-destination": {
            "Address": "http://optimize-service:8002"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:10",
            "Policy": "ConsecutiveFailures",
            "Path": "/api/health"
          }
        }
      },
      "scheduler-cluster": {
        "Destinations": {
          "scheduler-destination": {
            "Address": "http://scheduler-service:5003"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:10",
            "Policy": "ConsecutiveFailures",
            "Path": "/api/health"
          }
        }
      }
    }
  },
  "IpRateLimiting": {
    "EnableEndpointRateLimiting": true,
    "StackBlockedRequests": false,
    "RealIpHeader": "X-Real-IP",
    "ClientIdHeader": "X-ClientId",
    "HttpStatusCode": 429,
    "GeneralRules": [
      {
        "Endpoint": "*",
        "Period": "1m",
        "Limit": 100
      },
      {
        "Endpoint": "*",
        "Period": "15m",
        "Limit": 1000
      },
      {
        "Endpoint": "*",
        "Period": "1h",
        "Limit": 5000
      }
    ]
  },
  "ServiceEndpoints": {
    "TimeseriesService": "http://timeseries-service:5001",
    "ForecastService": "http://forecast-service:8001",
    "OptimizeService": "http://optimize-service:8002",
    "SchedulerService": "http://scheduler-service:5003"
  }
}
